
Systems Development Life Cycle (SDLC)
=====================================

.. post::
   :language: ru
   :tags: Software Architecture, Management, Agile, SDLC
   :category:
   :author: Ivan Zakrevsky

.. May 07, 2021

–î–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —Å Telegram-channel `@emacsway_log <https://t.me/emacsway_log>`__, –∏ –ø–æ—Å–≤—è—â–µ–Ω–∞ –≤–æ–ø—Ä–æ—Å—É –≤—ã–±–æ—Ä–∞ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Systems Development Life Cycle (SDLC).


.. contents:: –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ

Grady Booch –≤—ã–¥–µ–ª—è–µ—Ç –¥–≤–∞ –∫–ª—é—á–µ–≤—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —É—Å–ø–µ—Ö –∏–ª–∏ –Ω–µ—É–¥–∞—á—É –ø—Ä–æ–µ–∫—Ç–∞:

üìù "Traits of Successful Projects 
A successful software project is one in which the deliverables satisfy and possibly exceed the customer‚Äôs expectations, the development occurred in a timely and economical fashion, and the result is resilient to change and adaptation. By this measure, we have observed several traits that are common to virtually all of the successful object-oriented systems we have encountered and noticeably absent from the ones that we count as failures: 
- Existence of a strong architectural vision
- Application of a well-managed iterative and incremental development lifecycle"
- Object-Oriented Analysis and Design with Applications‚Äù 3rd edition by Grady Booch, Robert A. Maksimchuk, Michael W. Engle, Bobbi J. Young Ph.D., Jim Conallen, Kelli A. Houston

–ï—Å–ª–∏ —Å "architectural vision" –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ, —Ç–æ —Å "well-managed development lifecycle" —É –º–Ω–æ–≥–∏—Ö –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, –¥–ª—è —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≥—Ä–∞–º–æ—Ç–Ω–æ –≤—ã–±—Ä–∞–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç–ª–∞–∂–µ–Ω—ã.

"–£—á–µ–±–Ω–∏–∫ 4CIO" - –≥–ª–∞–≤–∞ 3.4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –ü–û
https://book4cio.ru/#page-14

SEBoK: Life Cycle Models:
https://www.sebokwiki.org/wiki/Life_Cycle_Models

SEBoK: System Life Cycle Process Models: Iterative:
https://www.sebokwiki.org/wiki/System_Life_Cycle_Process_Models:_Iterative

–ù–µ–ø–ª–æ—Ö–æ–π SDLC Tutorial: https://www.tutorialspoint.com/sdlc/index.htm

SDLC - Quick Guide:
https://www.tutorialspoint.com/sdlc/sdlc_quick_guide.htm

ITABoK: Architecture Methodologies and Frameworks:
https://itabok.iasaglobal.org/itabok3_0/architecture-methodologies-and-frameworks/

ITABoK: What is Agility:
https://itabok.iasaglobal.org/itabok3_0/digital-outcome-model/agility/

"Systems engineering handbook. A guide for System Life Cycle Processes and activities" by INCOSE
https://www.incose.org/products-and-publications/se-handbook

"ISO/IEC/IEEE 12207:2017 Systems and software engineering ‚Äî Software life cycle processes"
https://www.iso.org/standard/63712.html

"ISO/IEC/IEEE 15288:2015 Systems and software engineering ‚Äî System life cycle processes"
https://www.iso.org/standard/63711.html

"–ì–û–°–¢ –† –ò–°–û/–ú–≠–ö 12207-2010"
https://allgosts.ru/35/080/gost_r_iso!mek_12207-2010

"–ì–û–°–¢ –† 57193-2016"
https://allgosts.ru/35/080/gost_r_57193-2016

"Object-Oriented Analysis and Design with Applications" 3rd edition by Grady Booch, Robert A. Maksimchuk, Michael W. Engle, Bobbi J. Young Ph.D., Jim Conallen, Kelli A. Houston - "Chapter 6. Process"

"Software Architecture in Practice" 3d edition by Len Bass, Paul Clements, Rick Kazman - "Chapter 15. Architecture in agile projects"

"Extreme Programming Explained" 1st edition by Kent Beck (–∏–º–µ–Ω–Ω–æ –ø–µ—Ä–≤–æ–µ –∏–∑–¥–∞–Ω–∏–µ) - –∫—Ç–æ —ç—Ç–æ–π –∫–Ω–∏–≥–∏ –Ω–µ —á–∏—Ç–∞–ª, —Ç–æ—Ç –Ω–∏—á–µ–≥–æ –≤ Agile –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç.

–¢—Ä–∏ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–µ –∫–Ω–∏–≥–∏ Dean Leffingwell:

"Scaling Software Agility: Best Practices for Large Enterprises" by Dean Leffingwell - –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.

"Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise" by Dean Leffingwell - –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–π –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ Agile.

"SAFe¬Æ 5.0: The World‚Äôs Leading Framework for Business Agility" by Richard Knaster, Dean Leffingwell - –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–∞—á–Ω–∞—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–∞—è Agile-–º–æ–¥–µ–ª—å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.

"Essential Scrum: A Practical Guide to the Most Popular Agile Process" by Kenneth Rubin - –≥–ª–∞–≤—ã 3 –∏ 8 –ø—Ä–æ—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è Scrum.
- https://t.me/emacsway_log/431
- https://t.me/emacsway_log/35
- https://t.me/emacsway_log/151

–ö—Ä–∞—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, Craig Larman:
https://www.craiglarman.com/wiki/downloads/misc/history-of-iterative-larman-and-basili-ieee-computer.pdf

LeSS by Craig Larman - –∫—É—á–∞ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–Ω–æ–º–Ω–æ:
https://less.works/less/framework/introduction
–ù–∞ —Ä—É—Å—Å–∫–æ–º:
https://less.works/ru/less/framework/introduction


.. .. update:: May 07, 2021
